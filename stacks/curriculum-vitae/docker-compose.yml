---
services:
  postgres:
    image: "postgres:16-alpine"
    volumes:
      - "/juicefs/services/reactive-resume/postgres:/var/lib/postgresql/data"
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: "10s"
      timeout: "5s"
      retries: 5
    deploy:
      mode: "replicated"
      replicas: 1
      restart_policy:
        condition: "on-failure"
      placement:
        constraints:
          - "node.role != manager"

  chrome:
    image: "ghcr.io/browserless/chromium:latest"
    environment:
      TIMEOUT: "${CHROME_TIMEOUT}"
      CONCURRENT: "${CHROME_CONCURRENT}"
      TOKEN: "${CHROME_TOKEN}"
      EXIT_ON_HEALTH_FAILURE: "${CHROME_EXIT_ON_HEALTH_FAILURE}"
      PRE_REQUEST_HEALTH_CHECK: "${CHROME_PRE_REQUEST_HEALTH_CHECK}"
    deploy:
      mode: "replicated"
      replicas: 1
      restart_policy:
        condition: "on-failure"
      placement:
        constraints:
          - "node.role != manager"

  app:
    image: "amruthpillai/reactive-resume:latest"
    environment:
      PORT: "${APP_PORT}"
      NODE_ENV: "${APP_NODE_ENV}"
      NODE_TLS_REJECT_UNAUTHORIZED: "${APP_NODE_TLS_REJECT_UNAUTHORIZED}"
      PUBLIC_URL: "${APP_PUBLIC_URL}"
      STORAGE_URL: "${APP_STORAGE_URL}/${APP_STORAGE_BUCKET}"
      CHROME_TOKEN: "${CHROME_TOKEN}"
      CHROME_URL: "${APP_CHROME_URL}"
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}"
      ACCESS_TOKEN_SECRET: "${APP_ACCESS_TOKEN_SECRET}"
      REFRESH_TOKEN_SECRET: "${APP_REFRESH_TOKEN_SECRET}"
      MAIL_FROM: "${APP_MAIL_FROM}"
      STORAGE_ENDPOINT: "${APP_STORAGE_ENDPOINT}"
      STORAGE_PORT: "${APP_STORAGE_PORT}"
      STORAGE_REGION: "${APP_STORAGE_REGION}"
      STORAGE_BUCKET: "${APP_STORAGE_BUCKET}"
      STORAGE_ACCESS_KEY: "${APP_STORAGE_ACCESS_KEY}"
      STORAGE_SECRET_KEY: "${APP_STORAGE_SECRET_KEY}"
      STORAGE_USE_SSL: "${APP_STORAGE_USE_SSL}"
      STORAGE_SKIP_BUCKET_CHECK: "${APP_STORAGE_SKIP_BUCKET_CHECK}"
      DISABLE_SIGNUPS: "${APP_DISABLE_SIGNUPS}"
      DISABLE_EMAIL_AUTH: "${APP_DISABLE_EMAIL_AUTH}"
    ports:
      - "${APP_PORT}:${APP_PORT}"
    deploy:
      mode: "replicated"
      replicas: 1
      restart_policy:
        condition: "on-failure"
      placement:
        constraints:
          - "node.role != manager"
